{
    "page_title": "",
    "note": "if page_title is empty then, nothing is displayed, alternatively you can have a widget with type title below. Both are feasible. For better dashboard allignment, it is recommended to have a title widget.",
    "page_rows": [

        {
            "widgets_spec": [
                0.4,
                0.2,
                0.2,
                0.2
            ],
            "widgets": [
                {
                    "type": "title",
                    "config"  : {
                        "body": "Dashboard Overview"
                    }
                },
                {
                    "type": "date_input",
                    "query": "select (CURRENT_DATE - INTERVAL 7 DAY) AS start_date_filter,CURRENT_DATE AS end_date_filter",
                    "config": {
                        "min_value" : "today-750",
                        "max_value" : "today+1",
                        "start_date_column" : "start_date_filter",
                        "end_date_column" : "end_date_filter"
                    }
                },
                {
                    "type": "selectbox",
                    "query": "SELECT unnest(keys) AS display_names, unnest(values) AS select_box_filter FROM ( SELECT ['a', 'b', 'c'] AS keys, [1, 2, 3] AS values );",
                    "config": {
                        "index" : 0,
                        "options_column_name" : "select_box_filter",
                        "alias_column_name" : "display_names"
                    }
                },
                {
                    "type": "selectbox",
                    "query":  "WITH conditions AS ( SELECT DISTINCT lighting_condition FROM iceberg_scan('/tmp/iceberg_crashes/db/crashes_cube', allow_moved_paths = true) ), all_conditions AS ( SELECT list(lighting_condition) AS all_list FROM conditions ), per_condition AS ( SELECT lighting_condition AS aliases, [lighting_condition] AS select_box_condition_filter FROM conditions ), all_option AS ( SELECT 'All' AS aliases, all_list AS select_box_condition_filter FROM all_conditions ) SELECT * FROM per_condition UNION ALL SELECT * FROM all_option ORDER BY aliases desc;",
                    "config": {
                        "index" : 0,
                        "options_column_name" : "select_box_condition_filter",
                        "alias_column_name" : "aliases"
                    }
                }
            ]
        },
        {
            "widgets_spec": [
                0.25,
                0.25,
                0.5
            ],
            "widgets": [
                {
                    "type": "bar_chart",
                    "query": "SELECT category, count(*) as count FROM sales GROUP BY category",
                    "config": {
                        "x": "category",
                        "y": "count",
                        "title": "Sales by Category"
                    }
                },
                {
                    "type": "void"
                },
                {
                    "type": "line_chart",
                    "query": "SELECT date, revenue, orders FROM revenue_data",
                    "config": {
                        "x": "date",
                        "y": ["revenue", "orders"],
                        "title": "Revenue Over Time"
                    }
                }
            ]
        },
        {
            "widgets_spec": [
                1
            ],
            "widgets": [
                {
                    "type": "dataframe",
                    "query": "SELECT * FROM top_customers LIMIT 10",
                    "config": {
                        "columns": [
                            "name",
                            "spend"
                        ],
                        "title": "Top Customers"
                    }
                }
            ]
        }
        ,
        {
            "widgets_spec": [
               1
            ],
            "widgets": [

                {
                    "type": "dataframe",
                    "query1": "select 'sfa' as name, 30 as spend ",
                    "query": "SELECT * FROM iceberg_scan('/tmp/iceberg_crashes/db/crashes_cube', allow_moved_paths = true) where crash_day >= '__start_date_filter__' and  crash_day <= '__end_date_filter__' limit 2",
                    "config": {
                        "columns": [
                            "name",
                            "spend"
                        ],
                        "title": "Top Customers"
                    }
                }
            ]
        },
         {
            "widgets_spec": [
               1
            ],
            "widgets": [

                {
                    "type": "map",
                    "query": "SELECT lat, lon FROM iceberg_scan('/tmp/iceberg_crashes/db/crashes_cube', allow_moved_paths = true) where crash_day >= '__start_date_filter__' and  crash_day <= '__end_date_filter__'",
                    "config": {
                        "color": "#e30712",
                        "latitude": "lat",
                        "longitude": "lon",
                        "columns": [
                            "lat",
                            "lon"
                        ]
                    }
                }
            ]
        },
        {
            "widgets_spec": [
               1
            ],
            "widgets": [
                {
                    "type": "dataframe",
                    "query": "SELECT * FROM iceberg_scan('/tmp/iceberg_crashes/db/crashes_cube', allow_moved_paths = true) where lighting_condition in __select_box_condition_filter__",
                    "config": {

                    }
                }
            ]
        },
        {
            "widgets_spec": [
               0.5, 0.5
            ],
            "widgets": [
                {
                    "type": "dataframe",
                    "query": "SELECT is_am FROM iceberg_scan('/tmp/iceberg_crashes/db/crashes_cube', allow_moved_paths = true) where lighting_condition in __select_box_condition_filter__ limit 2",
                    "config": {

                    }
                },
                {
                    "type": "dataframe",
                    "query": "SELECT blahis_am FROM iceberg_scan('/tmp/iceberg_crashes/db/crashes_cube', allow_moved_paths = true) where lighting_condition in __select_box_condition_filter__ limit 2",
                    "config": {

                    }
                }
            ]
        }
    ]
}